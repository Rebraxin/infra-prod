version: "3.8"

services:
  traefik-service:
    image: traefik:latest
    container_name: traefik-container
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy_bridge
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations
    labels:
      traefik.enable: true
      traefik.docker.network: proxy_bridge
      traefik.http.routers.traefik-secure.entrypoints: ${ENTRYPOINT}
      traefik.http.routers.traefik-secure.rule: Host(`traefik.${DOMAIN}`)
      traefik.http.routers.traefik-secure.middlewares: user-auth@file
      traefik.http.routers.traefik-secure.service: api@internal

  portainer-service:
    image: portainer/portainer-ce:latest
    container_name: portainer-container
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy_bridge
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    labels:
      traefik.enable: true
      traefik.docker.network: proxy_bridge
      traefik.http.routers.portainer-secure.entrypoints: ${ENTRYPOINT}
      traefik.http.routers.portainer-secure.rule: Host(`portainer.${DOMAIN}`)
      traefik.http.routers.portainer-secure.service: portainer-service
      traefik.http.services.portainer-service.loadbalancer.server.port: 9000

  mariadb-service:
    image: mariadb:latest
    container_name: mariadb-container
    restart: always
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports: 
      - 3306:3306
    volumes: 
      - mariadb-data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks: 
      mariadb_bridge:
        aliases:
          - db
          - mysql
      
  phpmyadmin-service:
    image: phpmyadmin:latest
    container_name: phpmyadmin-container
    restart: always
    environment: 
      - PMA_ARBITRARY=1
    volumes: 
      - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      - ./phpmyadmin/php.ini:/usr/local/etc/php/conf.d/cedric-php.ini
    networks:
      - proxy_bridge
      - mariadb_bridge
    labels:
      traefik.enable: true
      traefik.http.routers.phpmyadmin-secure.entrypoints: ${ENTRYPOINT}
      traefik.http.routers.phpmyadmin-secure.rule: Host(`myadmin.${DOMAIN}`)
      traefik.http.services.phpmyadmin-service.loadbalancer.server.port: 80
      traefik.http.routers.phpmyadmin-secure.service: phpmyadmin-service
      traefik.docker.network: proxy_bridge

  mongodb-service:
    image: mongo:latest
    container_name: mongodb-container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongodb_bridge
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
      - ./mongo/config:/data/configdb

  mongoexpress-service:
    image: mongo-express
    container_name: mongoexpress-container
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb-service
      ME_CONFIG_OPTIONS_EDITORTHEME: ${ME_CONFIG_OPTIONS_EDITORTHEME}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: ${ME_CONFIG_MONGODB_ENABLE_ADMIN}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    depends_on:
      - mongodb-service
    networks:
      - proxy_bridge
      - mongodb_bridge
    labels:
      traefik.enable: true
      traefik.http.routers.mongoexpress-secure-dev.entrypoints: ${ENTRYPOINT}
      traefik.http.routers.mongoexpress-secure-dev.rule: Host(`mongoadmin.${DOMAIN}`)
      traefik.http.services.mongoexpress-service.loadbalancer.server.port: 8081
      traefik.http.routers.mongoexpress-secure.service: mongoexpress-service
      traefik.docker.network: proxy_bridge

  postgres-service:
    image: postgres:latest
    container_name: postgres-container
    restart: always
    logging:
      options:
        max-size: 500m
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      postgres_bridge:
        aliases:
          - postgresql
          - db
  
  pgadmin-service:
    image: dpage/pgadmin4
    container_name: pgadmin-container
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DISABLE_POSTFIX: ${PGADMIN_DISABLE_POSTFIX}
    networks:
      - proxy_bridge
      - postgres_bridge
    labels:
      traefik.enable: true
      traefik.http.routers.pgadmin.entrypoints: web
      traefik.http.routers.pgadmin.rule: Host(`pgadmin.${DOMAIN}`)
      traefik.http.services.pgadmin.loadbalancer.server.port: 80
      traefik.docker.network: proxy_bridge

networks:
  proxy_bridge:
    external: true
  mariadb_bridge:
    external: true
  mongodb_bridge:
    external: true
  postgres_bridge:
    external: true

volumes:
  portainer-data:
  mariadb-data:
  mongodb-data:
  postgres_data: